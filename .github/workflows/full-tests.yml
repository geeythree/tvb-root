name: full_tests
on: [push]
jobs:

  full_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]

    steps:
      - uses: actions/checkout@v1

      - name: set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: upgrade pip
        run: python -m pip install --upgrade pip

      - name: put ~/.local/bin on $PATH
        run: echo "PATH=$HOME/.local/bin:$PATH" >> $GITHUB_ENV

      - name: create a requirements file
        run: echo "numba scipy numpy networkx scikit-learn cython numexpr psutil pytest pytest-cov pytest-xdist pytest-benchmark pytest-mock matplotlib psycopg2 h5py>=2.10 typing BeautifulSoup4 subprocess32 flask-restx python-keycloak mako pyAesCrypt pyunicore formencode cfflib jinja2<2.12.0 nibabel sqlalchemy alembic allensdk sphinx==1.2.3 docutils==0.12 werkzeug flask gevent jupyter cherrypy autopep8" | tr ' ' \\n > requirements.txt

      - name: cache ~/.local for pip deps
        id: cache-local
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}

      - name: pip install dependencies (from Dockerfile-build)
        if: steps.cache-local.outputs.cache-hit != 'true'
        run: |
          pip install --user -r requirements.txt
          pip install --user --no-build-isolation tvb-gdist

      - name: setup tvb
        run: cd tvb_build && bash install_full_tvb.sh

      - name: cache data
        id: cache-data
        uses: actions/cache@v2
        with:
          path: tvb_data
          key: tvb-data

      - name: download data
        if: steps.cache-data.outputs.cache-hit != 'true'
        run: |
          wget -q https://zenodo.org/record/4263723/files/tvb_data.zip?download=1 -O tvb_data.zip
          mkdir tvb_data
          unzip tvb_data.zip -d tvb_data
          rm tvb_data.zip

      - name: setup data
        run: |
          cd tvb_data
          python3 setup.py develop

      # - name: run library tests
      #   run: cd scientific_library && python -m pytest -n4

      # - name: run library benchmarks
      #   run: cd scientific_library && python -m pytest --benchmark-only

      - name: upgrade markupsafe
        run: pip3 install -U 'markupsafe==2.0.1'

      - name: run framework tests
        run: cd framework_tvb && python -m pytest

      - name: run storage tests
        run: cd tvb_storage && python -m pytest
